# your_project/celery.py
from __future__ import absolute_import, unicode_literals
import os
from celery import Celery

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'zeo.settings')

app = Celery('zeo')

# Load task modules from all registered Django app configs.
app.config_from_object('django.conf:settings', namespace='CELERY')
app.autodiscover_tasks()

@app.task(bind=True)
def debug_task(self):
    print(f'Request: {self.request!r}')

init.py**
# your_project/__init__.py
from __future__ import absolute_import, unicode_literals

# This will make sure the app is always imported when Django starts so that shared_task will use this app.
from .celery import app as celery_app

__all__ = ('celery_app',)


settings.py**
#https://github.com/microsoftarchive/redis/releases
#celery -A zeo worker -l info -P eventlet
#celery -A zeo beat --loglevel=info
# Celery settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Or your Redis server URL
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# Set this to ensure retries during startup
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
TIME_ZONE = 'UTC'  # or your specific timezone
CELERY_TIMEZONE = 'Asia/Kolkata'  # or your specific timezone
CELERY_ENABLE_UTC = True  # Ensure UTC is enabled if needed

CELERY_BEAT_SCHEDULE = {
    'schedule-document-expiry-notifications-for-all-tenants': {
        'task': 'EmpManagement.tasks.send_document_expiry_notifications_for_all_tenants',
        'schedule': crontab(hour=14, minute=27) 
        # 'schedule': timedelta(days=1),

    },
}
# CELERY_BEAT_SCHEDULE_FILENAME = 'celerybeat-schedule'  # Save Celery Beat schedule state

CELERY_IMPORTS = ('EmpManagement.tasks',)
